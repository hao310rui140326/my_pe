#ifndef DEPTHWISE_STATIC_FILTERS
#define DEPTHWISE_STATIC_FILTERS

#include "fpga_common_utils.h"
#include "fpga_arch.h"
#include "fpga_defs.h"
#include "fpga_stream_buffer.h"
#include "fpga_fp16.h"
#include "fpga_types.h"


CONSTANT float filters [2*DEPTHWISE_K_VECTOR][DEPTHWISE_K_VECTOR*(3 * 3 + 1)] = {
                                             {4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f,4.0f,
                                             2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f,2.0f,
                                             3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f,3.0f,
                                             4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f,4.0f,
                                             5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f,5.0f,
                                             6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f,6.0f,
                                             7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f,7.0f,
                                             8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f,8.0f,
                                             1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,1.0f,
                                             2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f, 2.0f,2.0f,
                                             3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f, 3.0f,3.0f,
                                             4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f, 4.0f,4.0f,
                                             5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f, 5.0f,5.0f,
                                             6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f, 6.0f,6.0f,
                                             7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f, 7.0f,7.0f,
                                             8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f, 8.0f,8.0f},
                                            {
                                             9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f,9.0f,
                                             10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,
                                             11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,
                                             12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,
                                             13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,
                                             14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,
                                             15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,
                                             16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0,
                                             9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f, 9.0f,9.0f,
                                             10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,10.0f,
                                             11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,11.0f,
                                             12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,12.0f,
                                             13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,13.0f,
                                             14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,14.0f,
                                             15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,15.0f,
                                             16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0f,16.0}};
#endif

